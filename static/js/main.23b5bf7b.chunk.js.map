{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAoEeA,MAnEf,SAAkBC,GACd,MAAuBC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,KAAhE,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUC,iBAAO,MACvBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAa,SAAAC,GACfP,EAASO,EAAEC,OAAOV,QAgBtB,OACI,sBAAMW,UAAU,YAAYC,SAZb,SAAAH,GACfA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAGC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnBC,KAAKjB,IAGTC,EAAS,KAIT,SACKL,EAAME,KACH,qCACA,uBACAoB,KAAK,OACLC,YAAY,oBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,mBAAlB,uBAOA,qCACJ,uBACIQ,KAAK,OACLC,YAAY,cACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,cAAlB,sBAVA,U,eCDAa,MAtCf,YAA2D,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,aAAaC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,WACzC,EAAqB9B,mBAAS,CAC1BgB,GAAG,KACHd,MAAM,KAFV,mBAAOD,EAAP,KAAY8B,EAAZ,KAWA,OAAG9B,EAAKe,GACG,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SARd,SAAAZ,GACf4B,EAAW7B,EAAKe,GAAGd,GACnB6B,EAAQ,CACJf,GAAG,KACHd,MAAM,QAMPyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACd,sBACErB,UAAWoB,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACE,cAAC,IAAD,CACEuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEZ,cAAC,IAAD,CACEuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAClDP,UAAU,mBAZTqB,OCqCAG,MAxDf,WACI,MAAsBrC,mBAAS,IAA/B,mBAAM2B,EAAN,KAAYW,EAAZ,KAwCA,OACI,gCACI,0DACA,cAAC,EAAD,CAAUxB,SAzCF,SAAAmB,GAAS,IAAD,EACpB,GAAKA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAApC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,IACT,EAAAC,SAAQC,IAAR,SAAYT,GAAZ,mBAAqBN,SAkCjB,cAAC,EAAD,CACAA,MAAOA,EACPC,aAfa,SAAAZ,GACf,IAAI2B,EAAahB,EAAMK,KAAI,SAAAC,GAIvB,OAHGA,EAAKjB,KAAKA,IACTiB,EAAKE,YAAYF,EAAKE,YAEnBF,KAEXK,EAASK,IASPd,WAvBa,SAAAb,GACjB,IAAM4B,EAAa,YAAIjB,GAAOkB,QAAO,SAAAZ,GAAI,OAAIA,EAAKjB,KAAOA,KAEzDsB,EAASM,IAqBLd,WAnCa,SAACgB,EAAQC,GACrBA,EAAS3B,OAAQ,QAAQmB,KAAKQ,EAAS3B,OAI5CkB,GAAS,SAAAU,GAAI,OAAIA,EAAKhB,KAAI,SAAAiB,GAAI,OAAKA,EAAKjC,KAAO8B,EAASC,EAAWE,eCV5DC,MATf,WACE,OACE,qBAAKrC,UAAU,WAAf,SAEE,cAAC,EAAD,OCLNsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23b5bf7b.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react';\r\nfunction TodoForm(props) {\r\n    const [input,setInput]=useState(props.edit ? props.edit.value : \" \");\r\n    const inputRef= useRef(null)\r\n    useEffect(()=>{\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange=e=>{\r\n        setInput(e.target.value);\r\n\r\n    };\r\n\r\n\r\n    const handleSubmit=e=>{\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id:Math.floor(Math.random() * 10000),\r\n            text:input\r\n\r\n        });\r\n        setInput('');\r\n         \r\n    };\r\n    return(\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit? (\r\n                <>\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"Update Your Plan \"\r\n                value={input}\r\n                name=\"text\" \r\n                className=\"todo-input\"\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n                />\r\n                <button className=\"todo-button edit\" >\r\n                    Update \r\n                </button>\r\n                </>\r\n\r\n            ):\r\n            (\r\n                <>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Add a todo \"\r\n                value={input}\r\n                name=\"text\" \r\n                className=\"todo-input\"\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">\r\n                    Add todo   \r\n                </button>)\r\n                </>\r\n            \r\n            )}\r\n            {/* <></> fragment line */}\r\n           \r\n        </form>\r\n       \r\n\r\n    );\r\n}\r\nexport default TodoForm;"," import React,{useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\n function Todo({todos,completeTodo,removeTodo,updateTodo }){\r\n     const [edit,setEdit]=useState({\r\n         id:null,\r\n         value:''\r\n     });\r\n     const submitUpdate=value=>{\r\n         updateTodo(edit.id,value)\r\n         setEdit({\r\n             id:null,\r\n             value:''\r\n         })\r\n     }\r\n     if(edit.id){\r\n         return <TodoForm edit={edit} onSubmit={submitUpdate}/>;\r\n     }\r\n     return todos.map((todo, index) => (\r\n        <div\r\n          className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n          key={index}\r\n        >\r\n          <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n            {todo.text}\r\n          </div>\r\n          <div className='icons'>\r\n            <RiCloseCircleLine\r\n              onClick={() => removeTodo(todo.id)}\r\n              className='delete-icon'\r\n            />\r\n            <TiEdit\r\n              onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n              className='edit-icon'\r\n            />\r\n          </div>\r\n        </div>\r\n     ));  \r\n      \r\n     \r\n }\r\n export default Todo;","import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\n\r\nfunction TodoList(){\r\n    const[todos,setTodos]=useState([]);\r\n    // if nothing is typed then nothing will be shown\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n          return;\r\n        }\r\n    \r\n        const newTodos = [todo, ...todos];\r\n    \r\n        setTodos(newTodos);\r\n        console.log(todo, ...todos);\r\n      };\r\n\r\n      const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n          return;\r\n        }\r\n    \r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n      };\r\n\r\n     \r\n\r\n\r\n      const removeTodo = id => {\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n    \r\n        setTodos(removedArr);\r\n      };\r\n\r\n     \r\n      const completeTodo=id=>{\r\n          let updatedTodos=todos.map(todo=>{\r\n              if(todo.id===id){\r\n                  todo.isComplete=!todo.isComplete;\r\n              }\r\n              return todo;\r\n          });\r\n          setTodos(updatedTodos);\r\n      };\r\n    return(\r\n        <div>\r\n            <h1>whats the plan for today</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo \r\n            todos={todos}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            updateTodo={updateTodo}\r\n             />\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\nexport default TodoList;\r\n","import './App.css';\nimport React from 'react';\n// import TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      {/* <TodoForm/> */}\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}